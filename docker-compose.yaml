version: "3.9"

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672" # For RabbitMQ management plugin

  postgres:
    image: postgres:latest
    
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    hostname: postgres-db

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eagle-bot-image-task-producer
    image: landingresgistry.azurecr.io/eagle-bot-image-task-producer:V1.0.0
    restart: on-failure
    ports:
      - "8001:8001"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - postgres

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eagle-bot-image-celery-worker
    image: eagle-bot-image-response-worker:V1.0.0
    command: ["celery", "-A", "src.celery_app", "worker", "--loglevel=info", "--concurrency=1"]
    restart: on-failure
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - RABBITMQ_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres-db
      - DB_NAME=postgres
      - DB_PORT=5432

  result_consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eagle-bot-image-result-consumer
    image: eagle-bot-image-result-consumer:V1.0.0
    command: ["python3", "src/consumer.py"]
    restart: on-failure
    depends_on:
      - rabbitmq
      - celery_worker
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RESPOSE_QUEUE_NAME=image_response

  ai_model_celery_worker:
    image: landingresgistry.azurecr.io/eagle-bot-image-gen-model:V1.0.0
    container_name: eagle-bot-image-gen-model-celery-worker
    build:
      context: ./src/worker
      dockerfile: Dockerfile
    command: ["celery", "-A", "src.ai_celery_app", "worker", "--loglevel=info"]
    restart: on-failure
    volumes:
      - transformers_cache_volume:/app/transformers_cache
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - AZURE_ACCOUNT_KEY=nkPQwjPikC0i3gc6aURqINL+XkWtGtzTOoEKQMTkjPN6TFi4LsLYfMSKH925BEbZ13qgURXPzHrW+AStQYxtyw==
      - AZURE_ACCOUNT_NAME=eaglebotlandingstorage
      - AZURE_CONTAINER_NAME=stable-diffusion-images
      - BASE_NAME=eagle-bot
      - MODLE_ID=stabilityai/stable-diffusion-2-1-base
      - RABBITMQ_HOST=rabbitmq
      - REQUEST_QUEUE=image_request
      - RESPONSE_QUEUE=image_response
      - OMP_NUM_THREADS=1

  ai_model_request_consumer:
    image: eagle-bot-image-gen-model:V1.0.0
    container_name: eagle-bot-image-gen-model-request-consumer
    build:
      context: ./src/worker
      dockerfile: Dockerfile
    command: ["python3", "src/consumer.py"]
    restart: on-failure
    depends_on:
      - rabbitmq
      - ai_model_celery_worker
    environment:
      - RABBITMQ_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - AZURE_ACCOUNT_KEY=nkPQwjPikC0i3gc6aURqINL+XkWtGtzTOoEKQMTkjPN6TFi4LsLYfMSKH925BEbZ13qgURXPzHrW+AStQYxtyw==
      - AZURE_ACCOUNT_NAME=eaglebotlandingstorage
      - AZURE_CONTAINER_NAME=stable-diffusion-images
      - BASE_NAME=eagle-bot
      - MODLE_ID=stabilityai/stable-diffusion-2-1-base
      - RABBITMQ_HOST=rabbitmq
      - REQUEST_QUEUE=image_request
      - RESPONSE_QUEUE=image_response

  flower:
    image: mher/flower
    container_name: eagle-bot-image-flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - FLOWER_PORT=5555
    depends_on:
      - rabbitmq
      - celery_worker

volumes:
  pgdata:
  transformers_cache_volume:
